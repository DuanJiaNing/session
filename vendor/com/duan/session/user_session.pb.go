// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/duan/session/user_session.proto

package com_duan_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserSessionStatus int32

const (
	UserSessionStatus_OPEN    UserSessionStatus = 0
	UserSessionStatus_CLOSED  UserSessionStatus = 1
	UserSessionStatus_PENDING UserSessionStatus = 2
)

var UserSessionStatus_name = map[int32]string{
	0: "OPEN",
	1: "CLOSED",
	2: "PENDING",
}

var UserSessionStatus_value = map[string]int32{
	"OPEN":    0,
	"CLOSED":  1,
	"PENDING": 2,
}

func (x UserSessionStatus) String() string {
	return proto.EnumName(UserSessionStatus_name, int32(x))
}

func (UserSessionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_280995061a330b3c, []int{0}
}

type UserSession struct {
	Status               UserSessionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.duan.session.UserSessionStatus" json:"status,omitempty"`
	UserId               string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId            string            `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserSession) Reset()         { *m = UserSession{} }
func (m *UserSession) String() string { return proto.CompactTextString(m) }
func (*UserSession) ProtoMessage()    {}
func (*UserSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_280995061a330b3c, []int{0}
}

func (m *UserSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSession.Unmarshal(m, b)
}
func (m *UserSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSession.Marshal(b, m, deterministic)
}
func (m *UserSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSession.Merge(m, src)
}
func (m *UserSession) XXX_Size() int {
	return xxx_messageInfo_UserSession.Size(m)
}
func (m *UserSession) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSession.DiscardUnknown(m)
}

var xxx_messageInfo_UserSession proto.InternalMessageInfo

func (m *UserSession) GetStatus() UserSessionStatus {
	if m != nil {
		return m.Status
	}
	return UserSessionStatus_OPEN
}

func (m *UserSession) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserSession) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func init() {
	proto.RegisterEnum("com.duan.session.UserSessionStatus", UserSessionStatus_name, UserSessionStatus_value)
	proto.RegisterType((*UserSession)(nil), "com.duan.session.UserSession")
}

func init() {
	proto.RegisterFile("com/duan/session/user_session.proto", fileDescriptor_280995061a330b3c)
}

var fileDescriptor_280995061a330b3c = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0xce, 0xcf, 0xd5,
	0x4f, 0x29, 0x4d, 0xcc, 0xd3, 0x2f, 0x4e, 0x2d, 0x2e, 0xce, 0xcc, 0xcf, 0xd3, 0x2f, 0x2d, 0x4e,
	0x2d, 0x8a, 0x87, 0x72, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04, 0x92, 0xf3, 0x73, 0xf5,
	0x40, 0x8a, 0xf4, 0xa0, 0xe2, 0x4a, 0x4d, 0x8c, 0x5c, 0xdc, 0xa1, 0xc5, 0xa9, 0x45, 0xc1, 0x10,
	0xbe, 0x90, 0x35, 0x17, 0x5b, 0x71, 0x49, 0x62, 0x49, 0x69, 0xb1, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x9f, 0x91, 0xb2, 0x1e, 0xba, 0x16, 0x3d, 0x24, 0xe5, 0xc1, 0x60, 0xa5, 0x41, 0x50, 0x2d, 0x42,
	0xe2, 0x5c, 0xec, 0x60, 0x4b, 0x33, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xd8, 0x40,
	0x5c, 0xcf, 0x14, 0x21, 0x59, 0x2e, 0x2e, 0xa8, 0x6e, 0x90, 0x1c, 0x33, 0x58, 0x8e, 0x13, 0x2a,
	0xe2, 0x99, 0xa2, 0x65, 0xc6, 0x25, 0x88, 0x61, 0xa8, 0x10, 0x07, 0x17, 0x8b, 0x7f, 0x80, 0xab,
	0x9f, 0x00, 0x83, 0x10, 0x17, 0x17, 0x9b, 0xb3, 0x8f, 0x7f, 0xb0, 0xab, 0x8b, 0x00, 0xa3, 0x10,
	0x37, 0x17, 0x7b, 0x80, 0xab, 0x9f, 0x8b, 0xa7, 0x9f, 0xbb, 0x00, 0x53, 0x12, 0x1b, 0xd8, 0x57,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0xac, 0xab, 0x19, 0xfc, 0x00, 0x00, 0x00,
}
