// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/duan/session/service.proto

package com_duan_session

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response struct {
	Success              bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Code                 int32         `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Payload              *OneOfPayload `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetPayload() *OneOfPayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type OneOfPayload struct {
	JoinResponse               *JoinResponse               `protobuf:"bytes,1,opt,name=join_response,json=joinResponse,proto3" json:"join_response,omitempty"`
	RefreshStatusResponse      *RefreshStatusResponse      `protobuf:"bytes,2,opt,name=refresh_status_response,json=refreshStatusResponse,proto3" json:"refresh_status_response,omitempty"`
	PauseResponse              *PauseResponse              `protobuf:"bytes,3,opt,name=pause_response,json=pauseResponse,proto3" json:"pause_response,omitempty"`
	LeaveResponse              *LeaveResponse              `protobuf:"bytes,4,opt,name=leave_response,json=leaveResponse,proto3" json:"leave_response,omitempty"`
	UserCountInSessionResponse *UserCountInSessionResponse `protobuf:"bytes,5,opt,name=user_count_in_session_response,json=userCountInSessionResponse,proto3" json:"user_count_in_session_response,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *OneOfPayload) Reset()         { *m = OneOfPayload{} }
func (m *OneOfPayload) String() string { return proto.CompactTextString(m) }
func (*OneOfPayload) ProtoMessage()    {}
func (*OneOfPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{1}
}

func (m *OneOfPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneOfPayload.Unmarshal(m, b)
}
func (m *OneOfPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneOfPayload.Marshal(b, m, deterministic)
}
func (m *OneOfPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneOfPayload.Merge(m, src)
}
func (m *OneOfPayload) XXX_Size() int {
	return xxx_messageInfo_OneOfPayload.Size(m)
}
func (m *OneOfPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_OneOfPayload.DiscardUnknown(m)
}

var xxx_messageInfo_OneOfPayload proto.InternalMessageInfo

func (m *OneOfPayload) GetJoinResponse() *JoinResponse {
	if m != nil {
		return m.JoinResponse
	}
	return nil
}

func (m *OneOfPayload) GetRefreshStatusResponse() *RefreshStatusResponse {
	if m != nil {
		return m.RefreshStatusResponse
	}
	return nil
}

func (m *OneOfPayload) GetPauseResponse() *PauseResponse {
	if m != nil {
		return m.PauseResponse
	}
	return nil
}

func (m *OneOfPayload) GetLeaveResponse() *LeaveResponse {
	if m != nil {
		return m.LeaveResponse
	}
	return nil
}

func (m *OneOfPayload) GetUserCountInSessionResponse() *UserCountInSessionResponse {
	if m != nil {
		return m.UserCountInSessionResponse
	}
	return nil
}

type UserSessionData struct {
	Session              *Session     `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	User                 *UserSession `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserSessionData) Reset()         { *m = UserSessionData{} }
func (m *UserSessionData) String() string { return proto.CompactTextString(m) }
func (*UserSessionData) ProtoMessage()    {}
func (*UserSessionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{2}
}

func (m *UserSessionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSessionData.Unmarshal(m, b)
}
func (m *UserSessionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSessionData.Marshal(b, m, deterministic)
}
func (m *UserSessionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSessionData.Merge(m, src)
}
func (m *UserSessionData) XXX_Size() int {
	return xxx_messageInfo_UserSessionData.Size(m)
}
func (m *UserSessionData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSessionData.DiscardUnknown(m)
}

var xxx_messageInfo_UserSessionData proto.InternalMessageInfo

func (m *UserSessionData) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *UserSessionData) GetUser() *UserSession {
	if m != nil {
		return m.User
	}
	return nil
}

type JoinRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{3}
}

func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (m *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(m, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *JoinRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type JoinResponse struct {
	UserSession          *UserSessionData `protobuf:"bytes,1,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{4}
}

func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetUserSession() *UserSessionData {
	if m != nil {
		return m.UserSession
	}
	return nil
}

type PauseResponse struct {
	UserSession          *UserSessionData `protobuf:"bytes,1,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PauseResponse) Reset()         { *m = PauseResponse{} }
func (m *PauseResponse) String() string { return proto.CompactTextString(m) }
func (*PauseResponse) ProtoMessage()    {}
func (*PauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{5}
}

func (m *PauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseResponse.Unmarshal(m, b)
}
func (m *PauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseResponse.Marshal(b, m, deterministic)
}
func (m *PauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseResponse.Merge(m, src)
}
func (m *PauseResponse) XXX_Size() int {
	return xxx_messageInfo_PauseResponse.Size(m)
}
func (m *PauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseResponse proto.InternalMessageInfo

func (m *PauseResponse) GetUserSession() *UserSessionData {
	if m != nil {
		return m.UserSession
	}
	return nil
}

type LeaveRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{6}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *LeaveRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LeaveResponse struct {
	UserSession          *UserSessionData `protobuf:"bytes,1,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LeaveResponse) Reset()         { *m = LeaveResponse{} }
func (m *LeaveResponse) String() string { return proto.CompactTextString(m) }
func (*LeaveResponse) ProtoMessage()    {}
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{7}
}

func (m *LeaveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveResponse.Unmarshal(m, b)
}
func (m *LeaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveResponse.Marshal(b, m, deterministic)
}
func (m *LeaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveResponse.Merge(m, src)
}
func (m *LeaveResponse) XXX_Size() int {
	return xxx_messageInfo_LeaveResponse.Size(m)
}
func (m *LeaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveResponse proto.InternalMessageInfo

func (m *LeaveResponse) GetUserSession() *UserSessionData {
	if m != nil {
		return m.UserSession
	}
	return nil
}

type RefreshStatusRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshStatusRequest) Reset()         { *m = RefreshStatusRequest{} }
func (m *RefreshStatusRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshStatusRequest) ProtoMessage()    {}
func (*RefreshStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{8}
}

func (m *RefreshStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshStatusRequest.Unmarshal(m, b)
}
func (m *RefreshStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshStatusRequest.Marshal(b, m, deterministic)
}
func (m *RefreshStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshStatusRequest.Merge(m, src)
}
func (m *RefreshStatusRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshStatusRequest.Size(m)
}
func (m *RefreshStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshStatusRequest proto.InternalMessageInfo

func (m *RefreshStatusRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *RefreshStatusRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type RefreshStatusResponse struct {
	UserSession          *UserSessionData `protobuf:"bytes,1,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RefreshStatusResponse) Reset()         { *m = RefreshStatusResponse{} }
func (m *RefreshStatusResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshStatusResponse) ProtoMessage()    {}
func (*RefreshStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{9}
}

func (m *RefreshStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshStatusResponse.Unmarshal(m, b)
}
func (m *RefreshStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshStatusResponse.Marshal(b, m, deterministic)
}
func (m *RefreshStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshStatusResponse.Merge(m, src)
}
func (m *RefreshStatusResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshStatusResponse.Size(m)
}
func (m *RefreshStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshStatusResponse proto.InternalMessageInfo

func (m *RefreshStatusResponse) GetUserSession() *UserSessionData {
	if m != nil {
		return m.UserSession
	}
	return nil
}

type PauseRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseRequest) Reset()         { *m = PauseRequest{} }
func (m *PauseRequest) String() string { return proto.CompactTextString(m) }
func (*PauseRequest) ProtoMessage()    {}
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{10}
}

func (m *PauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseRequest.Unmarshal(m, b)
}
func (m *PauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseRequest.Marshal(b, m, deterministic)
}
func (m *PauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseRequest.Merge(m, src)
}
func (m *PauseRequest) XXX_Size() int {
	return xxx_messageInfo_PauseRequest.Size(m)
}
func (m *PauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseRequest proto.InternalMessageInfo

func (m *PauseRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *PauseRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UserCountInSessionRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCountInSessionRequest) Reset()         { *m = UserCountInSessionRequest{} }
func (m *UserCountInSessionRequest) String() string { return proto.CompactTextString(m) }
func (*UserCountInSessionRequest) ProtoMessage()    {}
func (*UserCountInSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{11}
}

func (m *UserCountInSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCountInSessionRequest.Unmarshal(m, b)
}
func (m *UserCountInSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCountInSessionRequest.Marshal(b, m, deterministic)
}
func (m *UserCountInSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCountInSessionRequest.Merge(m, src)
}
func (m *UserCountInSessionRequest) XXX_Size() int {
	return xxx_messageInfo_UserCountInSessionRequest.Size(m)
}
func (m *UserCountInSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCountInSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCountInSessionRequest proto.InternalMessageInfo

func (m *UserCountInSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type UserCountInSessionResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCountInSessionResponse) Reset()         { *m = UserCountInSessionResponse{} }
func (m *UserCountInSessionResponse) String() string { return proto.CompactTextString(m) }
func (*UserCountInSessionResponse) ProtoMessage()    {}
func (*UserCountInSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c59904acec8791, []int{12}
}

func (m *UserCountInSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCountInSessionResponse.Unmarshal(m, b)
}
func (m *UserCountInSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCountInSessionResponse.Marshal(b, m, deterministic)
}
func (m *UserCountInSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCountInSessionResponse.Merge(m, src)
}
func (m *UserCountInSessionResponse) XXX_Size() int {
	return xxx_messageInfo_UserCountInSessionResponse.Size(m)
}
func (m *UserCountInSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCountInSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCountInSessionResponse proto.InternalMessageInfo

func (m *UserCountInSessionResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Response)(nil), "com.duan.session.Response")
	proto.RegisterType((*OneOfPayload)(nil), "com.duan.session.OneOfPayload")
	proto.RegisterType((*UserSessionData)(nil), "com.duan.session.UserSessionData")
	proto.RegisterType((*JoinRequest)(nil), "com.duan.session.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "com.duan.session.JoinResponse")
	proto.RegisterType((*PauseResponse)(nil), "com.duan.session.PauseResponse")
	proto.RegisterType((*LeaveRequest)(nil), "com.duan.session.LeaveRequest")
	proto.RegisterType((*LeaveResponse)(nil), "com.duan.session.LeaveResponse")
	proto.RegisterType((*RefreshStatusRequest)(nil), "com.duan.session.RefreshStatusRequest")
	proto.RegisterType((*RefreshStatusResponse)(nil), "com.duan.session.RefreshStatusResponse")
	proto.RegisterType((*PauseRequest)(nil), "com.duan.session.PauseRequest")
	proto.RegisterType((*UserCountInSessionRequest)(nil), "com.duan.session.UserCountInSessionRequest")
	proto.RegisterType((*UserCountInSessionResponse)(nil), "com.duan.session.UserCountInSessionResponse")
}

func init() { proto.RegisterFile("com/duan/session/service.proto", fileDescriptor_c8c59904acec8791) }

var fileDescriptor_c8c59904acec8791 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xc9, 0xda, 0xae, 0xdb, 0xb5, 0x1d, 0xd3, 0x69, 0xd3, 0xba, 0x48, 0x2d, 0x25, 0x48,
	0x50, 0x09, 0xd4, 0x89, 0xee, 0x05, 0xf1, 0xda, 0x6d, 0x52, 0x11, 0x62, 0x93, 0x4b, 0x1f, 0x51,
	0x14, 0x12, 0x0f, 0x32, 0xb5, 0x71, 0x88, 0x93, 0x49, 0x7b, 0xe7, 0x5b, 0xf0, 0x3d, 0xf8, 0x7c,
	0xc8, 0x8e, 0xd3, 0xa4, 0x4b, 0x32, 0x22, 0xb5, 0x4f, 0xc9, 0xf9, 0xee, 0x7e, 0xbe, 0xcb, 0xf9,
	0xef, 0x40, 0xdf, 0x66, 0xcb, 0x33, 0x27, 0xb2, 0xbc, 0x33, 0x4e, 0x39, 0x77, 0x99, 0x78, 0x06,
	0xf7, 0xae, 0x4d, 0x47, 0x7e, 0xc0, 0x42, 0x86, 0x87, 0x36, 0x5b, 0x8e, 0x84, 0x7f, 0xa4, 0xfc,
	0x7a, 0x51, 0x86, 0x7c, 0xc6, 0x19, 0xfa, 0xab, 0x9c, 0x3f, 0xe2, 0x34, 0x30, 0xd7, 0x82, 0x8c,
	0xdf, 0x1a, 0xec, 0x11, 0xca, 0x7d, 0xe6, 0x71, 0x8a, 0x5d, 0x68, 0xf2, 0xc8, 0xb6, 0x29, 0xe7,
	0x5d, 0x6d, 0xa0, 0x0d, 0xf7, 0x48, 0x62, 0xe2, 0x21, 0xd4, 0x96, 0xfc, 0x47, 0x77, 0x67, 0xa0,
	0x0d, 0xf7, 0x89, 0x78, 0x45, 0x84, 0xba, 0xcd, 0x1c, 0xda, 0xad, 0x0d, 0xb4, 0x61, 0x83, 0xc8,
	0x77, 0xfc, 0x00, 0x4d, 0xdf, 0x7a, 0x58, 0x30, 0xcb, 0xe9, 0xd6, 0x07, 0xda, 0xb0, 0x35, 0xee,
	0x8f, 0x1e, 0x57, 0x3d, 0xba, 0xf6, 0xe8, 0xf5, 0xed, 0x4d, 0x1c, 0x45, 0x92, 0x70, 0xe3, 0x6f,
	0x0d, 0xda, 0x59, 0x0f, 0x4e, 0xa0, 0x73, 0xc7, 0x5c, 0xcf, 0x0c, 0x54, 0x6d, 0xb2, 0xa0, 0x42,
	0xe0, 0x27, 0xe6, 0x7a, 0x49, 0x07, 0xa4, 0x7d, 0x97, 0xb1, 0xd0, 0x84, 0x93, 0x80, 0xde, 0x06,
	0x94, 0xff, 0x34, 0x79, 0x68, 0x85, 0x11, 0x4f, 0x71, 0x3b, 0x12, 0xf7, 0x26, 0x8f, 0x23, 0x71,
	0xc2, 0x4c, 0xc6, 0xaf, 0xb8, 0xc7, 0x41, 0xd1, 0x32, 0x5e, 0xc1, 0x81, 0x6f, 0x45, 0x9c, 0xa6,
	0xdc, 0x9a, 0xe4, 0xbe, 0xc8, 0x73, 0x6f, 0x44, 0xdc, 0x8a, 0xd7, 0xf1, 0xb3, 0xa6, 0xe0, 0x2c,
	0xa8, 0x75, 0x9f, 0xe1, 0xd4, 0xcb, 0x38, 0x9f, 0x45, 0x5c, 0xca, 0x59, 0x64, 0x4d, 0xf4, 0xa1,
	0x2f, 0x67, 0x6c, 0xb3, 0xc8, 0x0b, 0x4d, 0xd7, 0x4b, 0x86, 0x9d, 0x72, 0x1b, 0x92, 0xfb, 0x2e,
	0xcf, 0x9d, 0x73, 0x1a, 0x4c, 0x44, 0xda, 0xd4, 0x9b, 0xc5, 0x4b, 0xab, 0x4d, 0xf4, 0xa8, 0xd4,
	0x67, 0x3c, 0xc0, 0x73, 0x91, 0xa9, 0x96, 0x2f, 0xac, 0xd0, 0xc2, 0x73, 0x68, 0x2a, 0xa8, 0x1a,
	0xda, 0x69, 0x7e, 0xb7, 0x04, 0x93, 0x44, 0xe2, 0x7b, 0xa8, 0x8b, 0x5d, 0xd4, 0x5c, 0x7a, 0xc5,
	0xf5, 0x25, 0x59, 0x32, 0xd4, 0xb8, 0x84, 0x56, 0x3c, 0xfb, 0x5f, 0x11, 0xe5, 0x21, 0xf6, 0x00,
	0x92, 0x6e, 0x5d, 0x47, 0xee, 0xbc, 0x4f, 0xf6, 0xd5, 0xca, 0xd4, 0xc1, 0x13, 0x68, 0xca, 0x4f,
	0xe3, 0x3a, 0xea, 0x14, 0xef, 0x0a, 0x73, 0xea, 0x18, 0x5f, 0xa1, 0x9d, 0x3d, 0x42, 0x78, 0x01,
	0xed, 0xac, 0x4e, 0x54, 0x0f, 0x2f, 0x9f, 0xac, 0x48, 0xf4, 0x4d, 0x5a, 0x51, 0xba, 0x60, 0xcc,
	0xa1, 0xb3, 0x36, 0xf1, 0x2d, 0x61, 0xaf, 0xa0, 0xad, 0x0e, 0xc0, 0x66, 0x4d, 0xcf, 0xa1, 0xb3,
	0x76, 0x90, 0xb6, 0x54, 0xde, 0x17, 0x38, 0x7a, 0xa4, 0x9f, 0xcd, 0xca, 0xfc, 0x06, 0xc7, 0x85,
	0x7a, 0xdc, 0xde, 0xd7, 0x54, 0x43, 0xda, 0xac, 0xcc, 0x8f, 0x70, 0x5a, 0x24, 0x9f, 0x2a, 0x50,
	0x63, 0x0c, 0x7a, 0xb9, 0xf4, 0xf0, 0x08, 0x1a, 0x52, 0xcb, 0x32, 0xaf, 0x41, 0x62, 0x63, 0xfc,
	0xa7, 0x06, 0x07, 0x2a, 0x72, 0x16, 0xff, 0x24, 0xd0, 0x04, 0xcc, 0x63, 0xf0, 0x6d, 0x35, 0x9d,
	0xcb, 0x42, 0x75, 0xbd, 0xe8, 0x32, 0x54, 0x32, 0x7f, 0x86, 0x13, 0xa8, 0x0b, 0x99, 0x60, 0xaf,
	0xec, 0x06, 0xae, 0x02, 0x99, 0x43, 0x67, 0x6d, 0x9e, 0xf8, 0xfa, 0xbf, 0x17, 0x70, 0x15, 0xec,
	0x25, 0x34, 0xe4, 0x1c, 0xb1, 0x5f, 0x7a, 0xef, 0x56, 0xc4, 0x48, 0x51, 0x14, 0x61, 0xb2, 0xaa,
	0x7b, 0x1a, 0xf3, 0x7d, 0x57, 0xfe, 0x59, 0xcf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x21,
	0x0b, 0x87, 0xd2, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionServiceClient is the client API for SessionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionServiceClient interface {
	// only count user_session.status is OPEN and PENDING
	UserCountInSession(ctx context.Context, in *UserCountInSessionRequest, opts ...grpc.CallOption) (*Response, error)
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*Response, error)
	// if in pending, will reactive, update reactive_time
	RefreshStatus(ctx context.Context, in *RefreshStatusRequest, opts ...grpc.CallOption) (*Response, error)
	Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*Response, error)
	Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*Response, error)
}

type sessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionServiceClient(cc *grpc.ClientConn) SessionServiceClient {
	return &sessionServiceClient{cc}
}

func (c *sessionServiceClient) UserCountInSession(ctx context.Context, in *UserCountInSessionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.duan.session.SessionService/UserCountInSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.duan.session.SessionService/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) RefreshStatus(ctx context.Context, in *RefreshStatusRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.duan.session.SessionService/RefreshStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.duan.session.SessionService/Pause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Leave(ctx context.Context, in *LeaveRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/com.duan.session.SessionService/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServiceServer is the server API for SessionService service.
type SessionServiceServer interface {
	// only count user_session.status is OPEN and PENDING
	UserCountInSession(context.Context, *UserCountInSessionRequest) (*Response, error)
	Join(context.Context, *JoinRequest) (*Response, error)
	// if in pending, will reactive, update reactive_time
	RefreshStatus(context.Context, *RefreshStatusRequest) (*Response, error)
	Pause(context.Context, *PauseRequest) (*Response, error)
	Leave(context.Context, *LeaveRequest) (*Response, error)
}

// UnimplementedSessionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSessionServiceServer struct {
}

func (*UnimplementedSessionServiceServer) UserCountInSession(ctx context.Context, req *UserCountInSessionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCountInSession not implemented")
}
func (*UnimplementedSessionServiceServer) Join(ctx context.Context, req *JoinRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedSessionServiceServer) RefreshStatus(ctx context.Context, req *RefreshStatusRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshStatus not implemented")
}
func (*UnimplementedSessionServiceServer) Pause(ctx context.Context, req *PauseRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pause not implemented")
}
func (*UnimplementedSessionServiceServer) Leave(ctx context.Context, req *LeaveRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}

func RegisterSessionServiceServer(s *grpc.Server, srv SessionServiceServer) {
	s.RegisterService(&_SessionService_serviceDesc, srv)
}

func _SessionService_UserCountInSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCountInSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).UserCountInSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.duan.session.SessionService/UserCountInSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).UserCountInSession(ctx, req.(*UserCountInSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.duan.session.SessionService/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_RefreshStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).RefreshStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.duan.session.SessionService/RefreshStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).RefreshStatus(ctx, req.(*RefreshStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Pause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Pause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.duan.session.SessionService/Pause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Pause(ctx, req.(*PauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.duan.session.SessionService/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Leave(ctx, req.(*LeaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.duan.session.SessionService",
	HandlerType: (*SessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserCountInSession",
			Handler:    _SessionService_UserCountInSession_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _SessionService_Join_Handler,
		},
		{
			MethodName: "RefreshStatus",
			Handler:    _SessionService_RefreshStatus_Handler,
		},
		{
			MethodName: "Pause",
			Handler:    _SessionService_Pause_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _SessionService_Leave_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "com/duan/session/service.proto",
}
