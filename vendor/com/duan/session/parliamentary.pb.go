// Code generated by protoc-gen-go. DO NOT EDIT.
// source: com/duan/session/parliamentary.proto

package com_duan_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ParliamentaryStatus int32

const (
	ParliamentaryStatus_DONT_USE_0_IN_PARLIAMENTARYSTATUS ParliamentaryStatus = 0
	ParliamentaryStatus_IN                                ParliamentaryStatus = 1
	ParliamentaryStatus_LEAVED                            ParliamentaryStatus = 2
	ParliamentaryStatus_PENDING                           ParliamentaryStatus = 3
)

var ParliamentaryStatus_name = map[int32]string{
	0: "DONT_USE_0_IN_PARLIAMENTARYSTATUS",
	1: "IN",
	2: "LEAVED",
	3: "PENDING",
}

var ParliamentaryStatus_value = map[string]int32{
	"DONT_USE_0_IN_PARLIAMENTARYSTATUS": 0,
	"IN":      1,
	"LEAVED":  2,
	"PENDING": 3,
}

func (x ParliamentaryStatus) String() string {
	return proto.EnumName(ParliamentaryStatus_name, int32(x))
}

func (ParliamentaryStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d84486b8ec6c19d0, []int{0}
}

type Parliamentary struct {
	Id                   int64               `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Status               ParliamentaryStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.duan.session.ParliamentaryStatus" json:"status,omitempty"`
	UserId               string              `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId            int64               `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Parliamentary) Reset()         { *m = Parliamentary{} }
func (m *Parliamentary) String() string { return proto.CompactTextString(m) }
func (*Parliamentary) ProtoMessage()    {}
func (*Parliamentary) Descriptor() ([]byte, []int) {
	return fileDescriptor_d84486b8ec6c19d0, []int{0}
}

func (m *Parliamentary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parliamentary.Unmarshal(m, b)
}
func (m *Parliamentary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parliamentary.Marshal(b, m, deterministic)
}
func (m *Parliamentary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parliamentary.Merge(m, src)
}
func (m *Parliamentary) XXX_Size() int {
	return xxx_messageInfo_Parliamentary.Size(m)
}
func (m *Parliamentary) XXX_DiscardUnknown() {
	xxx_messageInfo_Parliamentary.DiscardUnknown(m)
}

var xxx_messageInfo_Parliamentary proto.InternalMessageInfo

func (m *Parliamentary) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Parliamentary) GetStatus() ParliamentaryStatus {
	if m != nil {
		return m.Status
	}
	return ParliamentaryStatus_DONT_USE_0_IN_PARLIAMENTARYSTATUS
}

func (m *Parliamentary) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Parliamentary) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func init() {
	proto.RegisterEnum("com.duan.session.ParliamentaryStatus", ParliamentaryStatus_name, ParliamentaryStatus_value)
	proto.RegisterType((*Parliamentary)(nil), "com.duan.session.Parliamentary")
}

func init() {
	proto.RegisterFile("com/duan/session/parliamentary.proto", fileDescriptor_d84486b8ec6c19d0)
}

var fileDescriptor_d84486b8ec6c19d0 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x4d, 0x57, 0xba, 0xec, 0x88, 0x4b, 0x89, 0x07, 0x7b, 0x11, 0xaa, 0xb8, 0x50, 0x3c,
	0xa4, 0xa2, 0x67, 0x0f, 0x81, 0x06, 0x09, 0xac, 0xb1, 0xa4, 0x5d, 0xc1, 0x83, 0x84, 0xb8, 0xe9,
	0x21, 0x60, 0x9b, 0xa5, 0x69, 0x0f, 0xbe, 0x88, 0xcf, 0x2b, 0x2d, 0x3d, 0xa8, 0x78, 0x9c, 0x99,
	0xef, 0xff, 0x06, 0x7e, 0xb8, 0xde, 0xbb, 0x26, 0x33, 0x83, 0x6e, 0x33, 0x5f, 0x7b, 0x6f, 0x5d,
	0x9b, 0x1d, 0x74, 0xf7, 0x61, 0x75, 0x53, 0xb7, 0xbd, 0xee, 0x3e, 0xc9, 0xa1, 0x73, 0xbd, 0xc3,
	0xd1, 0xde, 0x35, 0x64, 0xa4, 0xc8, 0x4c, 0x5d, 0x7d, 0x21, 0x38, 0x2d, 0x7e, 0x92, 0x78, 0x0d,
	0x81, 0x35, 0xf1, 0x71, 0x82, 0xd2, 0x85, 0x0c, 0xac, 0xc1, 0x0f, 0x10, 0xfa, 0x5e, 0xf7, 0x83,
	0x8f, 0x51, 0x82, 0xd2, 0xf5, 0xdd, 0x86, 0xfc, 0x95, 0x90, 0x5f, 0x82, 0x72, 0x82, 0xe5, 0x1c,
	0xc2, 0xe7, 0xb0, 0x1c, 0x7c, 0xdd, 0x29, 0x6b, 0xe2, 0x20, 0x41, 0xe9, 0x4a, 0x86, 0xe3, 0xc8,
	0x0d, 0xbe, 0x00, 0x98, 0xf3, 0xe3, 0x6d, 0x31, 0xfd, 0x5b, 0xcd, 0x1b, 0x6e, 0x6e, 0xde, 0xe0,
	0xec, 0x1f, 0x2d, 0xde, 0xc0, 0x65, 0xfe, 0x2c, 0x2a, 0xb5, 0x2b, 0x99, 0xba, 0x55, 0x5c, 0xa8,
	0x82, 0xca, 0x2d, 0xa7, 0x4f, 0x4c, 0x54, 0x54, 0xbe, 0x96, 0x15, 0xad, 0x76, 0x65, 0x74, 0x84,
	0x43, 0x08, 0xb8, 0x88, 0x10, 0x06, 0x08, 0xb7, 0x8c, 0xbe, 0xb0, 0x3c, 0x0a, 0xf0, 0x09, 0x2c,
	0x0b, 0x26, 0x72, 0x2e, 0x1e, 0xa3, 0xc5, 0x7b, 0x38, 0x15, 0x72, 0xff, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x55, 0x70, 0x71, 0x96, 0x38, 0x01, 0x00, 0x00,
}
